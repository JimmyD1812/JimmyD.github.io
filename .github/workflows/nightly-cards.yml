name: Nightly cards.ndjson(.gz)

on:
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: cards-nightly
  cancel-in-progress: true

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      TZ: America/Denver
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install deps
        working-directory: apps/mtg-browser
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build NDJSON (one pass â†’ gz + plain)
        working-directory: apps/mtg-browser
        run: |
          LIMIT="${{ github.event.inputs.limit }}"
          if [ -n "$LIMIT" ]; then
            python fetch_scryfall_to_ndjson.py --output cards.ndjson.gz --also-plain cards.ndjson --limit "$LIMIT"
          else
            python fetch_scryfall_to_ndjson.py --output cards.ndjson.gz --also-plain cards.ndjson
          fi
          ls -lh cards.ndjson cards.ndjson.gz || true

      - name: Ensure release exists
        run: |
          TAG="${{ github.event.inputs.tag }}"
          [ -z "$TAG" ] && TAG="cards"
          gh release view "$TAG" >/dev/null 2>&1 || \
          gh release create "$TAG" -t "Cards data" -n "Auto-update" --latest

      - name: Upload/replace assets
        if: ${{ github.event.inputs.dry_run != 'true' }}
        working-directory: apps/mtg-browser
        run: |
          TAG="${{ github.event.inputs.tag }}"
          [ -z "$TAG" ] && TAG="cards"
          gh release upload "$TAG" cards.ndjson.gz --clobber
          gh release upload "$TAG" cards.ndjson     --clobber
